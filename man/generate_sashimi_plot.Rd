% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_plotting.R
\name{generate_sashimi_plot}
\alias{generate_sashimi_plot}
\title{Generate Sashimi Plot (PDF + PNG)}
\usage{
generate_sashimi_plot(
  result_object,
  sample_index,
  gtf_file = "./data/Homo_sapiens.GRCh38.113.gtf",
  controls = c("IVCT-43Y-M", "IVCT-38-F"),
  control_labels = c("Control", "Control"),
  bam_dir =
    "/Volumes/PERKINS-LL-001/Sequencing/rnaseq/secondary/nfcore/2024-12-16_GenomicsWA_Realigned/star_salmon/",
  output_dir = ".",
  padding = 1000,
  ggsashimi_path = "./ggsashimi.py"
)
}
\arguments{
\item{result_object}{A list-like object (e.g. from OUTRIDER/FRASER results) containing `frares`
with fields `sampleID` and `coord`, where `coord` is in the format `"chr:start-end"`.}

\item{sample_index}{Integer index indicating which sample (row of `result_object$frares`) to plot.}

\item{gtf_file}{Path to the GTF file used for annotation (e.g., `"./data/Homo_sapiens.GRCh38.113.gtf"`).}

\item{controls}{Character vector of sample IDs to use as controls (must match BAM filenames).}

\item{control_labels}{Character vector of labels corresponding to each control (same length as `controls`).}

\item{bam_dir}{Directory containing all BAM files, named as `<sampleID>.markdup.sorted.bam`.}

\item{output_dir}{Directory where the output PDF and PNG files should be saved. Default is current directory.}

\item{padding}{Number of base pairs to pad upstream and downstream of the target region. Default is 1000.}

\item{ggsashimi_path}{Path to the `ggsashimi.py` script. Default assumes it's in the working directory.}
}
\value{
A named list containing paths to:
\describe{
  \item{pdf}{The output PDF file of the sashimi plot.}
  \item{png}{The output PNG file converted from the PDF.}
}
}
\description{
This function generates a sashimi plot for a given sample using a specified GTF annotation
and a set of BAM files (1 patient + controls). It expands the region of interest, writes
a temporary TSV for `ggsashimi.py`, runs the command, and converts the resulting PDF to PNG
for Shiny visualization.
}
